import os
import sys
import timeit
import random
import subprocess


def main(argv):
    try:
        protocol=argv[0]
        graphfile=argv[1]
        corUsers=int(argv[2])
        priorfile=argv[3]
        prior=[]
        f = open(priorfile,'r')
        for line in f:
            for x in line.split(' '):
                prior.append(float(x))
        f.close()
        runs=int(argv[4])
        print('\n\033[4m\033[1m'+'Vulnerability Simulation Information'+'\033[0m')
        print('Protocol: '+protocol)
        print('Number of Users: '+str(len(prior)+corUsers))
        print('Corrupted Users: ',corUsers)
        print('Number of runs: ',runs)
        
        users = [i for i in range(0,len(prior))]
        #print(users)
        #print(prior)
        p=prior
        print('\nCalculating run users_file ...')
        f = open('users_file','w') 
        for i in range(0,runs):
            uex=random.choices(users,p)
            f.write(str(uex[0])+'\n')
        f.close()
        
        FNULL = open(os.devnull, 'w')
        print('\nSimulation Started ...')
        simstart=timeit.default_timer()
        subprocess.run(["python3","simulate.py",protocol,graphfile,str(corUsers),'users_file'],stdout=FNULL)
        FNULL.close()
        simstop=timeit.default_timer()
        print('Total Simulation Time (seconds): ',simstop-simstart)

        FNULL = open(os.devnull, 'w')
        print('\nAttack Started ...')
        attstart=timeit.default_timer()
        subprocess.run(['python3','attack.py',protocol,graphfile,str(corUsers),priorfile,'output'],stdout=FNULL)
        FNULL.close()
        attstop=timeit.default_timer()
        print('Total Attack Time (seconds): ',attstop-attstart)

        #Calculating success
        success=0
        f = open('users_file','r')
        inputsim=[]
        for line in f:
            inputsim.append(int(line))
        f.close()
        f = open('output_attack','r')
        outputattack=[]
        for line in f:
            outputattack.append(int(line))
        f.close()

        for i in range(0,runs):
            if inputsim[i]==outputattack[i]:
                success=success+1

        print('\n\033[1mSuccessful Predictions: \033[91m'+str(success)+'/'+str(runs)+'\033[0m')
        print('\033[1mTrue Possitive Percentage: \033[91m'+str((success/runs)*100)+' %\033[0m')




    except:
        print('Invalid arguments!')
        print('Execution Example:\npython3 vulnerability.py [dc|crowds] <graph-file> <c> <prior-file> <runs>' )
        print('1. [dc|crowds]   choose one for attack')
        print('2. <graph-file>  provide name of the file containing graph adjacency matrix')
        print('3. <c>           provide number of corrupted users (0 for none)')
        print('4. <prior-file>  provide name of the file containing sender\'s probability distribution (only for non-corrupted users')
        print('5. <runs>        provide number of simulations for execution')



if __name__ == "__main__":
    start = timeit.default_timer()
    main(sys.argv[1:])
    stop = timeit.default_timer()
    print('\nTotal Execution Time (seconds): ', stop-start,'\n')
